language: node_js
node_js:
  - 14

services:
  - docker

env:
  IMG_FRONTEND: udagram-frontend
  IMG_API_USER: udagram-api-user
  IMG_API_FEED: udagram-api-feed
  IMG_REVERSEPROXY: reverseproxy

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

before_script:
  - echo "no tests"

script:
  - docker build -t $IMG_FRONTEND udagram-frontend/
  - docker build -t $IMG_API_USER udagram-api-user/
  - docker build -t $IMG_API_FEED udagram-api-feed/
  - docker build -t $IMG_REVERSEPROXY udagram-reverseproxy/

# Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
  # Tag images
  - docker tag $IMG_FRONTEND $DOCKER_USER/$IMG_FRONTEND
  - docker tag $IMG_API_USER $DOCKER_USER/$IMG_API_USER
  - docker tag $IMG_API_FEED $DOCKER_USER/$IMG_API_FEED
  - docker tag $IMG_REVERSEPROXY $DOCKER_USER/$IMG_REVERSEPROXY
  # Push images to repo
  - docker push $DOCKER_USER/$IMG_FRONTEND
  - docker push $DOCKER_USER/$IMG_API_USER
  - docker push $DOCKER_USER/$IMG_API_FEED
  - docker push $DOCKER_USER/$IMG_REVERSEPROXY
  - echo "Pushed all images success!!!"
